                        .module jfp_fasong.c
                        .area text(rom, con, rel)
 0000                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
                        .area data(ram, con, rel)
 0000                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0000           _TxRxBuf::
 0000                   .blkb 2
                        .area idata
 0000 0102              .byte 1,2
                        .area data(ram, con, rel)
 0002                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0002                   .blkb 2
                        .area idata
 0002 0304              .byte 3,4
                        .area data(ram, con, rel)
 0004                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0004                   .blkb 2
                        .area idata
 0004 0506              .byte 5,6
                        .area data(ram, con, rel)
 0006                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0006                   .blkb 2
                        .area idata
 0006 0708              .byte 7,8
                        .area data(ram, con, rel)
 0008                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0008                   .blkb 2
                        .area idata
 0008 0910              .byte 9,16
                        .area data(ram, con, rel)
 000A                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 000A                   .blkb 2
                        .area idata
 000A 1112              .byte 17,18
                        .area data(ram, con, rel)
 000C                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 000C                   .blkb 2
                        .area idata
 000C 1314              .byte 19,20
                        .area data(ram, con, rel)
 000E                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 000E                   .blkb 2
                        .area idata
 000E 1516              .byte 21,22
                        .area data(ram, con, rel)
 0010                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0010                   .blkb 2
                        .area idata
 0010 1718              .byte 23,24
                        .area data(ram, con, rel)
 0012                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0012                   .blkb 2
                        .area idata
 0012 1920              .byte 25,32
                        .area data(ram, con, rel)
 0014                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0014                   .blkb 2
                        .area idata
 0014 2122              .byte 33,34
                        .area data(ram, con, rel)
 0016                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0016                   .blkb 2
                        .area idata
 0016 2324              .byte 35,36
                        .area data(ram, con, rel)
 0018                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0018                   .blkb 2
                        .area idata
 0018 2526              .byte 37,38
                        .area data(ram, con, rel)
 001A                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 001A                   .blkb 2
                        .area idata
 001A 2728              .byte 39,40
                        .area data(ram, con, rel)
 001C                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 001C                   .blkb 2
                        .area idata
 001C 2930              .byte 41,48
                        .area data(ram, con, rel)
 001E                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 001E                   .blkb 2
                        .area idata
 001E 3132              .byte 49,50
                        .area data(ram, con, rel)
 0020                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0020                   .dbsym e TxRxBuf _TxRxBuf A[32:32]c
 0020           _TxAddress::
 0020                   .blkb 2
                        .area idata
 0020 CCCC              .byte 204,204
                        .area data(ram, con, rel)
 0022                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0022                   .blkb 2
                        .area idata
 0022 CCCC              .byte 204,204
                        .area data(ram, con, rel)
 0024                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0024                   .dbsym e TxAddress _TxAddress A[4:4]c
 0024           _RFConf::
 0024                   .blkb 2
                        .area idata
 0024 004C              .byte 0,'L
                        .area data(ram, con, rel)
 0026                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0026                   .blkb 2
                        .area idata
 0026 0C44              .byte 12,'D
                        .area data(ram, con, rel)
 0028                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0028                   .blkb 2
                        .area idata
 0028 2020              .byte 32,32
                        .area data(ram, con, rel)
 002A                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 002A                   .blkb 2
                        .area idata
 002A CCCC              .byte 204,204
                        .area data(ram, con, rel)
 002C                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 002C                   .blkb 2
                        .area idata
 002C CCCC              .byte 204,204
                        .area data(ram, con, rel)
 002E                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 002E                   .blkb 1
                        .area idata
 002E 58                .byte 'X
                        .area data(ram, con, rel)
 002F                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 002F                   .dbsym e RFConf _RFConf A[11:11]c
                        .area text(rom, con, rel)
 0000                   .dbfile C:\DOCUME~1\Administrator\桌面\JASK2001软件开发包\M16-NRF905开发包\无线232传输系统\NRF905_发送\jfp_fasong.c
 0000                   .dbfunc e Delay _Delay fV
 0000           ;              i -> R20,R21
 0000           ;              x -> R16,R17
                        .even
 0000           _Delay::
 0000 0E940000          xcall push_gset1
 0004                   .dbline -1
 0004                   .dbline 89
 0004           ; //ICC-AVR application builder : 2007-8-11 20:37:32
 0004           ; // Target : M16
 0004           ; // Crystal: 8.0000Mhz
 0004           ; #include <iom16v.h>
 0004           ; #include <macros.h>
 0004           ; #define uint  unsigned int
 0004           ; #define uchar unsigned char
 0004           ; //******************************************************************************
 0004           ; //***********************NRF905端口设置*****************************************
 0004           ; //******************************************************************************
 0004           ; ///////////////////////////模式控制定义/////////////////////////////////
 0004           ; //#define  nrf905_TX_EN         PB0       //输出1
 0004           ; #define   Hign_nrf905_TX_EN    PORTB |= (1 << PB0);   
 0004           ; #define   Low_nrf905_TX_EN     PORTB &= ~(1 << PB0); 
 0004           ; //#define  nrf905_TRX_CE  PD4             //输出1
 0004           ; #define   Hign_nrf905_TRX_CE    PORTD |= (1 << PD4);   
 0004           ; #define   Low_nrf905_TRX_CE     PORTD &= ~(1 << PD4); 
 0004           ; //#define  nrf905_PWR     PB1             //输出1
 0004           ; #define   Hign_nrf905_PWR    PORTB |= (1 << PB1);   
 0004           ; #define   Low_nrf905_PWR     PORTB &= ~(1 << PB1); 
 0004           ; //-------------------------------SPI口定义--------------------------------------
 0004           ; //#define  nrf905_MISO          PB6           //输入0
 0004           ; //#define  nrf905_MOSI    PB5     //输出1
 0004           ; //#define  nrf905_SCK     PB7     //输出1
 0004           ; #define   Low_nrf905_SCK     PORTB &= ~(1 << PB7); 
 0004           ; //------------------------------------------------------------------------------
 0004           ; //#define  nrf905_CSN     PB4         //输出1         
 0004           ; #define   Hign_nrf905_CSN    PORTB |= (1 << PB4);   
 0004           ; #define   Low_nrf905_CSN     PORTB &= ~(1 << PB4);                                            
 0004           ; //-------------------------------状态输出口-------------------------------------
 0004           ; //#define  nrf905_CD      PD3     //输入0
 0004           ; #define   Hign_nrf905_CD    PORTD |= (1 << PD3);   
 0004           ; #define   Low_nrf905_CD     PORTD &= ~(1 << PD3); 
 0004           ; #define   Read_nrf905_CD    PINB & (1 << PD3);
 0004           ; //#define  nrf905_AM      PB3     //输入0
 0004           ; #define   Hign_nrf905_AM    PORTB |= (1 << PB3);   
 0004           ; #define   Low_nrf905_AM     PORTB &= ~(1 << PB3); 
 0004           ; #define   Read_nrf905_AM    PINB & (1 << PB3);
 0004           ; //#define  nrf905_DR      PB2                 //输入0
 0004           ; #define   Hign_nrf905_DR     PORTB |= (1 << PB2);   
 0004           ; #define   Low_nrf905_DR     PORTB &= ~(1 << PB2); 
 0004           ; #define   Read_nrf905_DR    PINB & (1 << PB2);  
 0004           ; //-------------------------------BELL蜂明器-------------------------------------
 0004           ; #define   Hign_BELL  PORTD |= (1 << PD5);   
 0004           ; #define   Low_BELL     PORTD &= ~(1 << PD5); 
 0004           ; //-------------------------------JDQ继电器--------------------------------------
 0004           ; #define   Hign_JDQ  PORTD |= (1 << PD7)
 0004           ; #define   Low_JDQ     PORTD &= ~(1 << PD7) 
 0004           ; //----------------------------------905-SPI指令---------------------------------
 0004           ; #define WC    0x00
 0004           ; #define RRC   0x10
 0004           ; #define WTP   0x20
 0004           ; #define RTP   0x21
 0004           ; #define WTA   0x22
 0004           ; #define RTA   0x23
 0004           ; #define RRP   0x24
 0004           ; //---------------------------------发送数据-------------------------------------
 0004           ; uchar TxRxBuf[32]=                         
 0004           ; {
 0004           ; 0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,
 0004           ; 0x09,0x10,0x11,0x12,0x13,0x14,0x15,0x16,
 0004           ; 0x17,0x18,0x19,0x20,0x21,0x22,0x23,0x24,
 0004           ; 0x25,0x26,0x27,0x28,0x29,0x30,0x31,0x32,
 0004           ; };
 0004           ; //----------------------------------接收地址------------------------------------
 0004           ; uchar TxAddress[4]={0xcc,0xcc,0xcc,0xcc };    
 0004           ; //----------------------------------寄存器配置----------------------------------
 0004           ; uchar RFConf[11]=
 0004           ; {
 0004           ;   0x00,                             //配置命令//
 0004           ;   0x4c,                             //CH_NO,配置频段在423MHZ
 0004           ;   0x0C,                             //输出功率为10db,不重发，节电为正常模式
 0004           ;   0x44,                             //地址宽度设置，为4字节
 0004           ;   0x20,0x20,                        //接收发送有效数据长度为32字节
 0004           ;   0xCC,0xCC,0xCC,0xCC,              //接收地址
 0004           ;   0x58,                             //CRC充许，8位CRC校验，外部时钟信号不使能，16M晶振
 0004           ; };
 0004           ; //----------------------------------函数申明------------------------------------
 0004           ; void Delay(uint x);
 0004           ; void Spi_initial();
 0004           ; uchar SpiReadSpiWrite(uchar DATA);
 0004           ; void system_Init(void);
 0004           ; void Config905(void);
 0004           ; void TxPacket(void);
 0004           ; void SetTxMode(void);
 0004           ; void TX(void);
 0004           ; //-------------------------------延时子程序-------------------------------------
 0004           ; void Delay(uint x)
 0004           ; {
 0004 09C0              xjmp L3
 0006           L2:
 0006                   .dbline 92
 0006 4427              clr R20
 0008 5527              clr R21
 000A 02C0              xjmp L8
 000C           L5:
 000C                   .dbline 92
 000C           L6:
 000C                   .dbline 92
 000C 4F5F              subi R20,255  ; offset = 1
 000E 5F4F              sbci R21,255
 0010           L8:
 0010                   .dbline 92
 0010 4035              cpi R20,80
 0012 E0E0              ldi R30,0
 0014 5E07              cpc R21,R30
 0016 D0F3              brlo L5
 0018           L3:
 0018                   .dbline 91
 0018           ;       uint i;
 0018           ;       while(x--)
 0018 1801              movw R2,R16
 001A 0150              subi R16,1
 001C 1040              sbci R17,0
 001E 2220              tst R2
 0020 91F7              brne L2
 0022 3320              tst R3
 0024 81F7              brne L2
 0026           X0:
 0026                   .dbline -2
 0026           L1:
 0026 0E940000          xcall pop_gset1
 002A                   .dbline 0 ; func end
 002A 0895              ret
 002C                   .dbsym r i 20 i
 002C                   .dbsym r x 16 i
 002C                   .dbend
 002C                   .dbfunc e Spi_initial _Spi_initial fV
                        .even
 002C           _Spi_initial::
 002C                   .dbline -1
 002C                   .dbline 96
 002C           ;       for(i=0;i<80;i++);
 002C           ; }
 002C           ; //----------------------------------SPI初始化-----------------------------------
 002C           ; void Spi_initial()
 002C           ; {
 002C                   .dbline 99
 002C           ;       //SPCR=0x50;
 002C           ;       //SPSR=0x00;    
 002C           ;       SPCR   = (1<<SPE)|(1<<MSTR)|(0<<CPOL)|(0<<SPR0);   // 主机模式，fck/16, SPI方式0
 002C 80E5              ldi R24,80
 002E 8DB9              out 0xd,R24
 0030                   .dbline -2
 0030           L9:
 0030                   .dbline 0 ; func end
 0030 0895              ret
 0032                   .dbend
 0032                   .dbfunc e SpiReadSpiWrite _SpiReadSpiWrite fc
 0032           ;          cData -> R16
                        .even
 0032           _SpiReadSpiWrite::
 0032                   .dbline -1
 0032                   .dbline 103
 0032           ; }
 0032           ; //---------------------------------SPI读写程序----------------------------------      
 0032           ; uchar SpiReadSpiWrite(unsigned char cData)//r
 0032           ; {
 0032                   .dbline 104
 0032           ;       SPDR = cData;
 0032 0FB9              out 0xf,R16
 0034           L11:
 0034                   .dbline 106
 0034                   .dbline 106
 0034           L12:
 0034                   .dbline 105
 0034           ;       while(!(SPSR & (1<<SPIF) ))
 0034 779B              sbis 0xe,7
 0036 FECF              rjmp L11
 0038                   .dbline 106
 0038           ;       {};                     // 等待SPI发送完毕
 0038                   .dbline 107
 0038           ;       return SPDR;
 0038 0FB1              in R16,0xf
 003A                   .dbline -2
 003A           L10:
 003A                   .dbline 0 ; func end
 003A 0895              ret
 003C                   .dbsym r cData 16 c
 003C                   .dbend
 003C                   .dbfunc e system_Init _system_Init fV
                        .even
 003C           _system_Init::
 003C                   .dbline -1
 003C                   .dbline 111
 003C           ; }
 003C           ; //---------------------------------系统状态初始化-------------------------------
 003C           ; void system_Init(void)                        //r
 003C           ; {
 003C                   .dbline 113
 003C           ; 
 003C           ;       Hign_nrf905_CSN;                                // Spi  disable
 003C C49A              sbi 0x18,4
 003E                   .dbline 113
 003E                   .dbline 114
 003E           ;       Low_nrf905_SCK;                         // Spi clock line init low
 003E C798              cbi 0x18,7
 0040                   .dbline 114
 0040                   .dbline 115
 0040           ;       Low_nrf905_DR;                          // Init DR for input
 0040 C298              cbi 0x18,2
 0042                   .dbline 115
 0042                   .dbline 116
 0042           ;       Low_nrf905_AM;                          // Init AM for input
 0042 C398              cbi 0x18,3
 0044                   .dbline 116
 0044                   .dbline 117
 0044           ;       Low_nrf905_CD;                          // Init nrf905_CDfor input
 0044 9398              cbi 0x12,3
 0046                   .dbline 117
 0046                   .dbline 118
 0046           ;       Hign_nrf905_PWR;                                // nRF905 power on
 0046 C19A              sbi 0x18,1
 0048                   .dbline 118
 0048                   .dbline 119
 0048           ;       Low_nrf905_TRX_CE;                      // Set nRF905 in standby mode
 0048 9498              cbi 0x12,4
 004A                   .dbline 119
 004A                   .dbline 120
 004A           ;       Low_nrf905_TX_EN ;                      // set radio in Rx mode
 004A C098              cbi 0x18,0
 004C                   .dbline 120
 004C                   .dbline -2
 004C           L14:
 004C                   .dbline 0 ; func end
 004C 0895              ret
 004E                   .dbend
 004E                   .dbfunc e Config905 _Config905 fV
 004E           ;              i -> R20
                        .even
 004E           _Config905::
 004E 0E940000          xcall push_gset1
 0052                   .dbline -1
 0052                   .dbline 124
 0052           ; }
 0052           ; //--------------------------------NRF905寄存器初始化函数------------------------
 0052           ; void Config905(void)
 0052           ; {
 0052                   .dbline 126
 0052           ;       uchar i;
 0052           ;       Low_nrf905_CSN; 
 0052 C498              cbi 0x18,4
 0054                   .dbline 126
 0054                   .dbline 127
 0054           ;       Delay(1);                               // Spi enable for write a spi command
 0054 01E0              ldi R16,1
 0056 10E0              ldi R17,0
 0058 D3DF              xcall _Delay
 005A                   .dbline 129
 005A           ;       //SpiWrite(WC);                         // Write config command写放配置命令
 005A           ;       for (i=0;i<11;i++)                      // Write configration words  写放配置字
 005A 4427              clr R20
 005C 09C0              xjmp L19
 005E           L16:
 005E                   .dbline 130
 005E                   .dbline 131
 005E 80E0              ldi R24,<_RFConf
 0060 90E0              ldi R25,>_RFConf
 0062 E42F              mov R30,R20
 0064 FF27              clr R31
 0066 E80F              add R30,R24
 0068 F91F              adc R31,R25
 006A 0081              ldd R16,z+0
 006C E2DF              xcall _SpiReadSpiWrite
 006E                   .dbline 132
 006E           L17:
 006E                   .dbline 129
 006E 4395              inc R20
 0070           L19:
 0070                   .dbline 129
 0070 4B30              cpi R20,11
 0072 A8F3              brlo L16
 0074                   .dbline 133
 0074           ;       {
 0074           ;        SpiReadSpiWrite(RFConf[i]);
 0074           ;       }
 0074           ;       Hign_nrf905_CSN;                                        // Disable Spi
 0074 C49A              sbi 0x18,4
 0076                   .dbline 133
 0076                   .dbline -2
 0076           L15:
 0076 0E940000          xcall pop_gset1
 007A                   .dbline 0 ; func end
 007A 0895              ret
 007C                   .dbsym r i 20 c
 007C                   .dbend
 007C                   .dbfunc e TxPacket _TxPacket fV
 007C           ;              i -> R20
                        .even
 007C           _TxPacket::
 007C 0E940000          xcall push_gset1
 0080                   .dbline -1
 0080                   .dbline 137
 0080           ; }
 0080           ; //--------------------------------NRF905待发数据打包----------------------------
 0080           ; void TxPacket(void)
 0080           ; {
 0080                   .dbline 139
 0080           ;       uchar i;
 0080           ;       Low_nrf905_CSN;                                                         // 使能Spi，允许对nrf905进行读写操作
 0080 C498              cbi 0x18,4
 0082                   .dbline 139
 0082                   .dbline 140
 0082           ;       Delay(1);
 0082 01E0              ldi R16,1
 0084 10E0              ldi R17,0
 0086 BCDF              xcall _Delay
 0088                   .dbline 141
 0088           ;       SpiReadSpiWrite(WTP);                           // 写数据前先写写数据命令
 0088 00E2              ldi R16,32
 008A D3DF              xcall _SpiReadSpiWrite
 008C                   .dbline 142
 008C           ;       for (i=0;i<32;i++)
 008C 4427              clr R20
 008E 09C0              xjmp L24
 0090           L21:
 0090                   .dbline 143
 0090                   .dbline 144
 0090 80E0              ldi R24,<_TxRxBuf
 0092 90E0              ldi R25,>_TxRxBuf
 0094 E42F              mov R30,R20
 0096 FF27              clr R31
 0098 E80F              add R30,R24
 009A F91F              adc R31,R25
 009C 0081              ldd R16,z+0
 009E C9DF              xcall _SpiReadSpiWrite
 00A0                   .dbline 145
 00A0           L22:
 00A0                   .dbline 142
 00A0 4395              inc R20
 00A2           L24:
 00A2                   .dbline 142
 00A2 4032              cpi R20,32
 00A4 A8F3              brlo L21
 00A6                   .dbline 146
 00A6           ;       {
 00A6           ;       SpiReadSpiWrite(TxRxBuf[i]);            // 待发送的32字节数据
 00A6           ;       }                                               
 00A6           ;       Hign_nrf905_CSN;
 00A6 C49A              sbi 0x18,4
 00A8                   .dbline 146
 00A8                   .dbline 147
 00A8           ;       Delay(1);                                                       // 关闭Spi，不允许对nrf905进行读写操作
 00A8 01E0              ldi R16,1
 00AA 10E0              ldi R17,0
 00AC A9DF              xcall _Delay
 00AE                   .dbline 148
 00AE           ;       Low_nrf905_CSN;                                                         // 使能Spi
 00AE C498              cbi 0x18,4
 00B0                   .dbline 148
 00B0                   .dbline 149
 00B0           ;       SpiReadSpiWrite(WTA);                           // 写地址前首先先写地址命令
 00B0 02E2              ldi R16,34
 00B2 BFDF              xcall _SpiReadSpiWrite
 00B4                   .dbline 150
 00B4           ;       for (i=0;i<4;i++)                                       // 写 4 bytes 地址
 00B4 4427              clr R20
 00B6 09C0              xjmp L28
 00B8           L25:
 00B8                   .dbline 151
 00B8                   .dbline 152
 00B8 80E0              ldi R24,<_TxAddress
 00BA 90E0              ldi R25,>_TxAddress
 00BC E42F              mov R30,R20
 00BE FF27              clr R31
 00C0 E80F              add R30,R24
 00C2 F91F              adc R31,R25
 00C4 0081              ldd R16,z+0
 00C6 B5DF              xcall _SpiReadSpiWrite
 00C8                   .dbline 153
 00C8           L26:
 00C8                   .dbline 150
 00C8 4395              inc R20
 00CA           L28:
 00CA                   .dbline 150
 00CA 4430              cpi R20,4
 00CC A8F3              brlo L25
 00CE                   .dbline 154
 00CE           ;       {
 00CE           ;       SpiReadSpiWrite(TxAddress[i]);
 00CE           ;       }
 00CE           ;       Hign_nrf905_CSN;                                        // 关闭Spi
 00CE C49A              sbi 0x18,4
 00D0                   .dbline 154
 00D0                   .dbline 155
 00D0           ;       Hign_nrf905_TRX_CE;                                     // Set TRX_CE high,start Tx data transmission
 00D0 949A              sbi 0x12,4
 00D2                   .dbline 155
 00D2                   .dbline 156
 00D2           ;       Delay(1);                                                       // 等待DR变高
 00D2 01E0              ldi R16,1
 00D4 10E0              ldi R17,0
 00D6 94DF              xcall _Delay
 00D8                   .dbline 157
 00D8           ;       Low_nrf905_TRX_CE;                                                      // 设置TRX_CE=0
 00D8 9498              cbi 0x12,4
 00DA                   .dbline 157
 00DA                   .dbline -2
 00DA           L20:
 00DA 0E940000          xcall pop_gset1
 00DE                   .dbline 0 ; func end
 00DE 0895              ret
 00E0                   .dbsym r i 20 c
 00E0                   .dbend
 00E0                   .dbfunc e SetTxMode _SetTxMode fV
                        .even
 00E0           _SetTxMode::
 00E0                   .dbline -1
 00E0                   .dbline 161
 00E0           ; }
 00E0           ; //-------------------------------发送模式激发-----------------------------------
 00E0           ; void SetTxMode(void)
 00E0           ; {
 00E0                   .dbline 162
 00E0           ;       Low_nrf905_TRX_CE;                              //
 00E0 9498              cbi 0x12,4
 00E2                   .dbline 162
 00E2                   .dbline 163
 00E2           ;       Hign_nrf905_TX_EN;                              //发送使能
 00E2 C09A              sbi 0x18,0
 00E4                   .dbline 163
 00E4                   .dbline 164
 00E4           ;       Delay(2);                               // delay for mode change(>=650us)根据晶振不同要改变
 00E4 02E0              ldi R16,2
 00E6 10E0              ldi R17,0
 00E8 8BDF              xcall _Delay
 00EA                   .dbline -2
 00EA           L29:
 00EA                   .dbline 0 ; func end
 00EA 0895              ret
 00EC                   .dbend
 00EC                   .dbfunc e TX _TX fV
                        .even
 00EC           _TX::
 00EC                   .dbline -1
 00EC                   .dbline 168
 00EC           ; }
 00EC           ; //------------------------------------------------------------------------------
 00EC           ; void TX(void)
 00EC           ; {
 00EC                   .dbline 169
 00EC           ;      SetTxMode();        // Set nRF905 in Tx mode
 00EC F9DF              xcall _SetTxMode
 00EE                   .dbline 170
 00EE           ;        TxPacket();                       // Send data by nRF905
 00EE C6DF              xcall _TxPacket
 00F0                   .dbline -2
 00F0           L30:
 00F0                   .dbline 0 ; func end
 00F0 0895              ret
 00F2                   .dbend
 00F2                   .dbfunc e main _main fV
                        .even
 00F2           _main::
 00F2                   .dbline -1
 00F2                   .dbline 174
 00F2           ; }
 00F2           ; //------------------------------主函数------------------------------------------
 00F2           ; void main(void)
 00F2           ; { 
 00F2                   .dbline 175
 00F2           ;       DDRB=0xB3;
 00F2 83EB              ldi R24,179
 00F4 87BB              out 0x17,R24
 00F6                   .dbline 176
 00F6           ;       DDRC=0xF8;              //LCD端口设置
 00F6 88EF              ldi R24,248
 00F8 84BB              out 0x14,R24
 00FA                   .dbline 177
 00FA           ;       DDRD=0xf2;
 00FA 82EF              ldi R24,242
 00FC 81BB              out 0x11,R24
 00FE                   .dbline 179
 00FE           ; //------------------------------------------------------------------------------
 00FE           ;       Hign_BELL ;
 00FE 959A              sbi 0x12,5
 0100                   .dbline 179
 0100                   .dbline 180
 0100           ;       Hign_JDQ;
 0100 979A              sbi 0x12,7
 0102                   .dbline 182
 0102           ; //------------------------------------------------------------------------------
 0102           ;       Spi_initial();
 0102 94DF              xcall _Spi_initial
 0104                   .dbline 183
 0104           ;       system_Init();
 0104 9BDF              xcall _system_Init
 0106                   .dbline 184
 0106           ;       Config905();
 0106 A3DF              xcall _Config905
 0108 01C0              xjmp L33
 010A           L32:
 010A                   .dbline 187
 010A                   .dbline 188
 010A F0DF              xcall _TX
 010C                   .dbline 189
 010C           L33:
 010C                   .dbline 186
 010C FECF              xjmp L32
 010E           X1:
 010E                   .dbline -2
 010E           L31:
 010E                   .dbline 0 ; func end
 010E 0895              ret
 0110                   .dbend
