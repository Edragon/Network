                        .module jifeng_jieshou.c
                        .area text(rom, con, rel)
 0000                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
                        .area data(ram, con, rel)
 0000                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0000           _TxAddress::
 0000                   .blkb 2
                        .area idata
 0000 CCCC              .byte 204,204
                        .area data(ram, con, rel)
 0002                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0002                   .blkb 2
                        .area idata
 0002 CCCC              .byte 204,204
                        .area data(ram, con, rel)
 0004                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0004                   .dbsym e TxAddress _TxAddress A[4:4]c
 0004           _seg::
 0004                   .blkb 2
                        .area idata
 0004 C0CF              .byte 192,207
                        .area data(ram, con, rel)
 0006                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0006                   .blkb 2
                        .area idata
 0006 A4B0              .byte 164,176
                        .area data(ram, con, rel)
 0008                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0008                   .blkb 2
                        .area idata
 0008 9992              .byte 153,146
                        .area data(ram, con, rel)
 000A                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 000A                   .blkb 2
                        .area idata
 000A 82F8              .byte 130,248
                        .area data(ram, con, rel)
 000C                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 000C                   .blkb 2
                        .area idata
 000C 8090              .byte 128,144
                        .area data(ram, con, rel)
 000E                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 000E                   .dbsym e seg _seg A[10:10]c
 000E           _RFConf::
 000E                   .blkb 2
                        .area idata
 000E 004C              .byte 0,'L
                        .area data(ram, con, rel)
 0010                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0010                   .blkb 2
                        .area idata
 0010 0C44              .byte 12,'D
                        .area data(ram, con, rel)
 0012                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0012                   .blkb 2
                        .area idata
 0012 0404              .byte 4,4
                        .area data(ram, con, rel)
 0014                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0014                   .blkb 2
                        .area idata
 0014 CCCC              .byte 204,204
                        .area data(ram, con, rel)
 0016                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0016                   .blkb 2
                        .area idata
 0016 CCCC              .byte 204,204
                        .area data(ram, con, rel)
 0018                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0018                   .blkb 1
                        .area idata
 0018 58                .byte 'X
                        .area data(ram, con, rel)
 0019                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0019                   .dbsym e RFConf _RFConf A[11:11]c
                        .area text(rom, con, rel)
 0000                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0000                   .dbfunc e Delay _Delay fV
 0000           ;              i -> R20,R21
 0000           ;              x -> R16,R17
                        .even
 0000           _Delay::
 0000 4A93              st -y,R20
 0002 5A93              st -y,R21
 0004                   .dbline -1
 0004                   .dbline 105
 0004           ; //ICC-AVR application builder : 2007-8-11 20:37:32
 0004           ; // Target : M16
 0004           ; // Crystal: 8.0000Mhz
 0004           ; #include <iom16v.h>
 0004           ; #include <macros.h>
 0004           ; #define uint  unsigned int
 0004           ; #define uchar unsigned char
 0004           ; ///////////////////////////模式控制定义/////////////////////////////////
 0004           ; //#define  nrf905_TX_EN         PB0       //输出1   
 0004           ; #define   Low_nrf905_TX_EN     PORTB &= ~(1 << PB0)
 0004           ; #define   Hign_nrf905_TX_EN    PORTB |= (1 << PB0)
 0004           ; //#define  nrf905_TRX_CE  PD4     //输出1
 0004           ; #define   Hign_nrf905_TRX_CE    PORTD |= (1 << PD4)  
 0004           ; #define   Low_nrf905_TRX_CE     PORTD &= ~(1 << PD4) 
 0004           ; //#define  nrf905_PWR     PB1             //输出1
 0004           ; #define   Hign_nrf905_PWR    PORTB |= (1 << PB1) 
 0004           ; #define   Low_nrf905_PWR     PORTB &= ~(1 << PB1)
 0004           ; //--------------------------------SPI口定义-------------------------------------
 0004           ; //#define  nrf905_MISO          PB6           //输入0
 0004           ; //#define  nrf905_MOSI    PB5     //输出1
 0004           ; //#define  nrf905_SCK     PB7     //输出1
 0004           ; #define   Low_nrf905_SCK     PORTB &= ~(1 << PB7)
 0004           ; //------------------------------------------------------------------------------
 0004           ; //#define  nrf905_CSN     PB4         //输出1         
 0004           ; #define   Hign_nrf905_CSN    PORTB |= (1 << PB4)  
 0004           ; #define   Low_nrf905_CSN     PORTB &= ~(1 << PB4)                             
 0004           ; //-------------------------------状态输出口-------------------------------------
 0004           ; //#define  nrf905_CD      PD3     //输入0
 0004           ; #define   Hign_nrf905_CD    PORTD |= (1 << PD3) 
 0004           ; #define   Low_nrf905_CD     PORTD &= ~(1 << PD3) 
 0004           ; #define   Read_nrf905_CD    PINB & (1 << PD3)
 0004           ; //#define  nrf905_AM      PB3     //输入0
 0004           ; #define   Hign_nrf905_AM    PORTB |= (1 << PB3) 
 0004           ; #define   Low_nrf905_AM     PORTB &= ~(1 << PB3)
 0004           ; #define   Read_nrf905_AM    PINB & (1 << PB3)
 0004           ; //#define  nrf905_DR      PB2                 //输入0
 0004           ; #define   Hign_nrf905_DR    PORTB |= (1 << PB2)
 0004           ; #define   Low_nrf905_DR     PORTB &= ~(1 << PB2)
 0004           ; #define   Read_nrf905_DR    PINB & (1 << PB2)
 0004           ; //读取键值KEY2-KEY3-KEY4  
 0004           ; #define   Read_KEY_2              PINA & (1 << PA5)        
 0004           ; //甲队加3分
 0004           ; #define   Read_KEY_3          PINA & (1 << PA6)
 0004           ; //乙队加2分
 0004           ; #define   Read_KEY_4              PINA & (1 << PA7)   
 0004           ; //乙队加3分
 0004           ; //------------------------------数码管位选--------------------------------------
 0004           ; //#define Display1   PA1                  //输出1
 0004           ; #define   Hign_Display1     PORTA |= (1 << PA1);   
 0004           ; #define   Low_Display1    PORTA &= ~(1 << PA1); 
 0004           ; //#define Display2      PA2           //输出1
 0004           ; #define   Hign_Display2     PORTA |= (1 << PA2);   
 0004           ; #define   Low_Display2    PORTA &= ~(1 << PA2); 
 0004           ; //#define Display3     PA3            //输出1
 0004           ; #define   Hign_Display3     PORTA |= (1 << PA3);   
 0004           ; #define   Low_Display3     PORTA &= ~(1 << PA3); 
 0004           ; //#define Display4      PA4           //输出1
 0004           ; #define   Hign_Display4     PORTA |= (1 << PA4);   
 0004           ; #define   Low_Display4     PORTA &= ~(1 << PA4); 
 0004           ; //-------------------------------BELL蜂明器-------------------------------------
 0004           ; #define   Hign_BELL  PORTD |= (1 << PD5);   
 0004           ; #define   Low_BELL     PORTD &= ~(1 << PD5); 
 0004           ; //-------------------------------JDQ继电器--------------------------------------
 0004           ; #define   Hign_JDQ  PORTD |= (1 << PD7)
 0004           ; #define   Low_JDQ     PORTD &= ~(1 << PD7)
 0004           ; //----------------------------------905-SPI指令---------------------------------
 0004           ; #define WC    0x00
 0004           ; #define RRC   0x10
 0004           ; #define WTP   0x20
 0004           ; #define RTP   0x21
 0004           ; #define WTA   0x22
 0004           ; #define RTA   0x23
 0004           ; #define RRP   0x24
 0004           ; //---------------------------------发送数据缓冲区-------------------------------
 0004           ; uchar TxRxBuf[4];
 0004           ; //----------------------------------接收地址------------------------------------
 0004           ; uchar TxAddress[4]={0xcc,0xcc,0xcc,0xcc };    
 0004           ; uchar tf;
 0004           ; uchar seg[10]={0xC0,0xCF,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};         //0~~9段码
 0004           ; //------------------------------------------------------------------------------
 0004           ; //----------------------------------寄存器配置----------------------------------
 0004           ; uchar RFConf[11]=
 0004           ; {
 0004           ;   0x00,                             //配置命令//
 0004           ;   0x4c,                             //CH_NO,配置频段在430MHZ
 0004           ;   0x0C,                             //输出功率为10db,不重发，节电为正常模式
 0004           ;   0x44,                             //地址宽度设置，为4字节
 0004           ;   0x04,0x04,                        //接收发送有效数据长度为4字节
 0004           ;   0xCC,0xCC,0xCC,0xCC,              //接收地址
 0004           ;   0x58,                              //CRC充许，8位CRC校验，外部时钟信号不使能，16M晶振
 0004           ; };
 0004           ; //----------------------------------函数申明------------------------------------
 0004           ; void Delay(uint x);
 0004           ; void Spi_initial();
 0004           ; uchar SpiReadSpiWrite(uchar DATA);
 0004           ; void system_Init(void);
 0004           ; void Config905(void);
 0004           ; void TxPacket(uchar TxBUF[4]);
 0004           ; void SetTxMode(void);
 0004           ; void TX(void);
 0004           ; void StartUART(void);
 0004           ; void R_S_Byte(uchar R_Byte);
 0004           ; //----------------------------------100us延时子程序-----------------------------
 0004           ; void Delay(uint x)
 0004           ; {
 0004 09C0              xjmp L3
 0006           L2:
 0006                   .dbline 108
 0006           ;       uint i;
 0006           ;       while(x--)
 0006           ;       for(i=0;i<80;i++);
 0006 4427              clr R20
 0008 5527              clr R21
 000A 02C0              xjmp L8
 000C           L5:
 000C                   .dbline 108
 000C           L6:
 000C                   .dbline 108
 000C 4F5F              subi R20,255  ; offset = 1
 000E 5F4F              sbci R21,255
 0010           L8:
 0010                   .dbline 108
 0010 4035              cpi R20,80
 0012 E0E0              ldi R30,0
 0014 5E07              cpc R21,R30
 0016 D0F3              brlo L5
 0018           X0:
 0018           L3:
 0018                   .dbline 107
 0018 1801              movw R2,R16
 001A 0150              subi R16,1
 001C 1040              sbci R17,0
 001E 2220              tst R2
 0020 91F7              brne L2
 0022 3320              tst R3
 0024 81F7              brne L2
 0026           X1:
 0026                   .dbline -2
 0026           L1:
 0026                   .dbline 0 ; func end
 0026 5991              ld R21,y+
 0028 4991              ld R20,y+
 002A 0895              ret
 002C                   .dbsym r i 20 i
 002C                   .dbsym r x 16 i
 002C                   .dbend
 002C                   .dbfunc e Spi_initial _Spi_initial fV
                        .even
 002C           _Spi_initial::
 002C                   .dbline -1
 002C                   .dbline 112
 002C           ; }
 002C           ; //----------------------------------SPI初始化-----------------------------------
 002C           ; void Spi_initial()
 002C           ; {
 002C                   .dbline 115
 002C           ;       //SPCR=0x50;
 002C           ;       //SPSR=0x00;    
 002C           ;       SPCR   = (1<<SPE)|(1<<MSTR)|(0<<CPOL)|(0<<SPR0);   // 主机模式，fck/16, SPI方式0
 002C 80E5              ldi R24,80
 002E 8DB9              out 0xd,R24
 0030                   .dbline -2
 0030           L9:
 0030                   .dbline 0 ; func end
 0030 0895              ret
 0032                   .dbend
 0032                   .dbfunc e SpiReadSpiWrite _SpiReadSpiWrite fc
 0032           ;          cData -> R16
                        .even
 0032           _SpiReadSpiWrite::
 0032                   .dbline -1
 0032                   .dbline 119
 0032           ; }
 0032           ; //---------------------------------SPI读写程序----------------------------------      
 0032           ; uchar SpiReadSpiWrite(unsigned char cData)//r
 0032           ; {
 0032                   .dbline 120
 0032           ;       SPDR = cData;
 0032 0FB9              out 0xf,R16
 0034           L11:
 0034                   .dbline 122
 0034           ;       while(!(SPSR & (1<<SPIF) ))
 0034           ;       {};                     // 等待SPI发送完毕
 0034                   .dbline 122
 0034           L12:
 0034                   .dbline 121
 0034 779B              sbis 0xe,7
 0036 FECF              rjmp L11
 0038           X2:
 0038                   .dbline 122
 0038                   .dbline 123
 0038           ;       return SPDR;
 0038 0FB1              in R16,0xf
 003A                   .dbline -2
 003A           L10:
 003A                   .dbline 0 ; func end
 003A 0895              ret
 003C                   .dbsym r cData 16 c
 003C                   .dbend
 003C                   .dbfunc e system_Init _system_Init fV
                        .even
 003C           _system_Init::
 003C                   .dbline -1
 003C                   .dbline 127
 003C           ; }
 003C           ; //---------------------------------系统状态初始化-------------------------------
 003C           ; void system_Init(void)                        //r
 003C           ; {
 003C                   .dbline 129
 003C           ; 
 003C           ;       Hign_nrf905_CSN;                                // Spi  disable
 003C C49A              sbi 0x18,4
 003E                   .dbline 130
 003E           ;       Low_nrf905_SCK;                         // Spi clock line init low
 003E C798              cbi 0x18,7
 0040                   .dbline 131
 0040           ;       Low_nrf905_DR;                          // Init DR for input
 0040 C298              cbi 0x18,2
 0042                   .dbline 132
 0042           ;       Low_nrf905_AM;                          // Init AM for input
 0042 C398              cbi 0x18,3
 0044                   .dbline 133
 0044           ;       Low_nrf905_CD;                          // Init nrf905_CDfor input
 0044 9398              cbi 0x12,3
 0046                   .dbline 134
 0046           ;       Hign_nrf905_PWR;                                // nRF905 power on
 0046 C19A              sbi 0x18,1
 0048                   .dbline 135
 0048           ;       Low_nrf905_TRX_CE;                      // Set nRF905 in standby mode
 0048 9498              cbi 0x12,4
 004A                   .dbline 136
 004A           ;       Low_nrf905_TX_EN ;                      // set radio in Rx mode
 004A C098              cbi 0x18,0
 004C                   .dbline -2
 004C           L14:
 004C                   .dbline 0 ; func end
 004C 0895              ret
 004E                   .dbend
 004E                   .dbfunc e Config905 _Config905 fV
 004E           ;              i -> R20
                        .even
 004E           _Config905::
 004E 4A93              st -y,R20
 0050 5A93              st -y,R21
 0052                   .dbline -1
 0052                   .dbline 140
 0052           ; }
 0052           ; //--------------------------------NRF905寄存器初始化函数------------------------
 0052           ; void Config905(void)
 0052           ; {
 0052                   .dbline 142
 0052           ;       uchar i;
 0052           ;       Low_nrf905_CSN; 
 0052 C498              cbi 0x18,4
 0054                   .dbline 143
 0054           ;       Delay(1);                               // Spi enable for write a spi command
 0054 01E0              ldi R16,1
 0056 10E0              ldi R17,0
 0058 D3DF              xcall _Delay
 005A                   .dbline 145
 005A           ;       //SpiWrite(WC);                         // Write config command写放配置命令
 005A           ;       for (i=0;i<11;i++)                      // Write configration words  写放配置字
 005A 4427              clr R20
 005C 09C0              xjmp L19
 005E           L16:
 005E                   .dbline 146
 005E           ;       {
 005E                   .dbline 147
 005E           ;        SpiReadSpiWrite(RFConf[i]);
 005E 80E0              ldi R24,<_RFConf
 0060 90E0              ldi R25,>_RFConf
 0062 E42F              mov R30,R20
 0064 FF27              clr R31
 0066 E80F              add R30,R24
 0068 F91F              adc R31,R25
 006A 0081              ldd R16,z+0
 006C E2DF              xcall _SpiReadSpiWrite
 006E                   .dbline 148
 006E           ;       }
 006E           L17:
 006E                   .dbline 145
 006E 4395              inc R20
 0070           L19:
 0070                   .dbline 145
 0070 4B30              cpi R20,11
 0072 A8F3              brlo L16
 0074           X3:
 0074                   .dbline 149
 0074           ;       Hign_nrf905_CSN;                                        // Disable Spi
 0074 C49A              sbi 0x18,4
 0076                   .dbline -2
 0076           L15:
 0076                   .dbline 0 ; func end
 0076 5991              ld R21,y+
 0078 4991              ld R20,y+
 007A 0895              ret
 007C                   .dbsym r i 20 c
 007C                   .dbend
 007C                   .dbfunc e TxPacket _TxPacket fV
 007C           ;              i -> R20
 007C           ;          TxBUF -> R10,R11
                        .even
 007C           _TxPacket::
 007C 0E940000          xcall push_xgset300C
 0080 5801              movw R10,R16
 0082                   .dbline -1
 0082                   .dbline 153
 0082           ; }
 0082           ; //--------------------------------NRF905待发数据打包----------------------------
 0082           ; void TxPacket(uchar TxBUF[4])
 0082           ; {
 0082                   .dbline 155
 0082           ;       uchar i;
 0082           ;       Low_nrf905_CSN;                                                         // 使能Spi，允许对nrf905进行读写操作
 0082 C498              cbi 0x18,4
 0084                   .dbline 156
 0084           ;       Delay(1);
 0084 01E0              ldi R16,1
 0086 10E0              ldi R17,0
 0088 BBDF              xcall _Delay
 008A                   .dbline 157
 008A           ;       SpiReadSpiWrite(WTP);                           // 写数据前先写写数据命令
 008A 00E2              ldi R16,32
 008C D2DF              xcall _SpiReadSpiWrite
 008E                   .dbline 158
 008E           ;       for (i=0;i<4;i++)
 008E 4427              clr R20
 0090 07C0              xjmp L24
 0092           L21:
 0092                   .dbline 159
 0092           ;       {
 0092                   .dbline 160
 0092           ;       SpiReadSpiWrite(TxBUF[i]);              // 待发送的32字节数据
 0092 E42F              mov R30,R20
 0094 FF27              clr R31
 0096 EA0D              add R30,R10
 0098 FB1D              adc R31,R11
 009A 0081              ldd R16,z+0
 009C CADF              xcall _SpiReadSpiWrite
 009E                   .dbline 161
 009E           ;       }                                               
 009E           L22:
 009E                   .dbline 158
 009E 4395              inc R20
 00A0           L24:
 00A0                   .dbline 158
 00A0 4430              cpi R20,4
 00A2 B8F3              brlo L21
 00A4           X4:
 00A4                   .dbline 162
 00A4           ;       Hign_nrf905_CSN;
 00A4 C49A              sbi 0x18,4
 00A6                   .dbline 163
 00A6           ;       Delay(1);                                                       // 关闭Spi，不允许对nrf905进行读写操作
 00A6 01E0              ldi R16,1
 00A8 10E0              ldi R17,0
 00AA AADF              xcall _Delay
 00AC                   .dbline 164
 00AC           ;       Low_nrf905_CSN;                                                         // 使能Spi
 00AC C498              cbi 0x18,4
 00AE                   .dbline 165
 00AE           ;       SpiReadSpiWrite(WTA);                           // 写地址前首先先写地址命令
 00AE 02E2              ldi R16,34
 00B0 C0DF              xcall _SpiReadSpiWrite
 00B2                   .dbline 166
 00B2           ;       for (i=0;i<4;i++)                                       // 写 4 bytes 地址
 00B2 4427              clr R20
 00B4 09C0              xjmp L28
 00B6           L25:
 00B6                   .dbline 167
 00B6           ;       {
 00B6                   .dbline 168
 00B6           ;       SpiReadSpiWrite(TxAddress[i]);
 00B6 80E0              ldi R24,<_TxAddress
 00B8 90E0              ldi R25,>_TxAddress
 00BA E42F              mov R30,R20
 00BC FF27              clr R31
 00BE E80F              add R30,R24
 00C0 F91F              adc R31,R25
 00C2 0081              ldd R16,z+0
 00C4 B6DF              xcall _SpiReadSpiWrite
 00C6                   .dbline 169
 00C6           ;       }
 00C6           L26:
 00C6                   .dbline 166
 00C6 4395              inc R20
 00C8           L28:
 00C8                   .dbline 166
 00C8 4430              cpi R20,4
 00CA A8F3              brlo L25
 00CC           X5:
 00CC                   .dbline 170
 00CC           ;       Hign_nrf905_CSN;                                        // 关闭Spi
 00CC C49A              sbi 0x18,4
 00CE                   .dbline 171
 00CE           ;       Hign_nrf905_TRX_CE;                                     // Set TRX_CE high,start Tx data transmission
 00CE 949A              sbi 0x12,4
 00D0                   .dbline 172
 00D0           ;       Delay(1);                                                       // 等待DR变高
 00D0 01E0              ldi R16,1
 00D2 10E0              ldi R17,0
 00D4 95DF              xcall _Delay
 00D6                   .dbline 173
 00D6           ;       Low_nrf905_TRX_CE;                                                      // 设置TRX_CE=0
 00D6 9498              cbi 0x12,4
 00D8                   .dbline -2
 00D8           L20:
 00D8                   .dbline 0 ; func end
 00D8 0C940000          xjmp pop_xgset300C
 00DC                   .dbsym r i 20 c
 00DC                   .dbsym r TxBUF 10 pc
 00DC                   .dbend
 00DC                   .dbfunc e SetTxMode _SetTxMode fV
                        .even
 00DC           _SetTxMode::
 00DC                   .dbline -1
 00DC                   .dbline 177
 00DC           ; }
 00DC           ; //-------------------------------发送模式激发-----------------------------------
 00DC           ; void SetTxMode(void)
 00DC           ; {
 00DC                   .dbline 178
 00DC           ;       Low_nrf905_TRX_CE;                              //
 00DC 9498              cbi 0x12,4
 00DE                   .dbline 179
 00DE           ;       Hign_nrf905_TX_EN;                              //发送使能
 00DE C09A              sbi 0x18,0
 00E0                   .dbline 180
 00E0           ;       Delay(2);                               // delay for mode change(>=650us)根据晶振不同要改变
 00E0 02E0              ldi R16,2
 00E2 10E0              ldi R17,0
 00E4 8DDF              xcall _Delay
 00E6                   .dbline -2
 00E6           L29:
 00E6                   .dbline 0 ; func end
 00E6 0895              ret
 00E8                   .dbend
 00E8                   .dbfunc e SetRxMode _SetRxMode fV
                        .even
 00E8           _SetRxMode::
 00E8                   .dbline -1
 00E8                   .dbline 185
 00E8           ; }
 00E8           ; //------------------------------------------------------------------------
 00E8           ; //------------------------------设置接收模式激发--------------------------------
 00E8           ; void SetRxMode(void)
 00E8           ; {
 00E8                   .dbline 186
 00E8           ;       Low_nrf905_TX_EN;
 00E8 C098              cbi 0x18,0
 00EA                   .dbline 187
 00EA           ;       Hign_nrf905_TRX_CE;
 00EA 949A              sbi 0x12,4
 00EC                   .dbline 188
 00EC           ;       Delay(1000);                                    // delay for mode change(>=650us)
 00EC 08EE              ldi R16,1000
 00EE 13E0              ldi R17,3
 00F0 87DF              xcall _Delay
 00F2                   .dbline -2
 00F2           L30:
 00F2                   .dbline 0 ; func end
 00F2 0895              ret
 00F4                   .dbend
 00F4                   .dbfunc e RxPacket _RxPacket fV
 00F4           ;              i -> R20
                        .even
 00F4           _RxPacket::
 00F4 4A93              st -y,R20
 00F6 5A93              st -y,R21
 00F8                   .dbline -1
 00F8                   .dbline 192
 00F8           ; }
 00F8           ; //-----------------------------------读接收数据包-------------------------------
 00F8           ; void RxPacket(void)                                                   //读数据
 00F8           ; {
 00F8                   .dbline 194
 00F8           ;       uchar i;
 00F8           ;     Low_nrf905_TRX_CE;
 00F8 9498              cbi 0x12,4
 00FA                   .dbline 195
 00FA           ;       Low_nrf905_CSN;                                             // 使能SPI
 00FA C498              cbi 0x18,4
 00FC                   .dbline 196
 00FC           ;     Delay(1);
 00FC 01E0              ldi R16,1
 00FE 10E0              ldi R17,0
 0100 7FDF              xcall _Delay
 0102                   .dbline 197
 0102           ;       SpiReadSpiWrite(RRP);                              // 写入数据接收缓冲区数据命令
 0102 04E2              ldi R16,36
 0104 96DF              xcall _SpiReadSpiWrite
 0106                   .dbline 198
 0106           ;       for (i = 0 ;i < 4 ;i++)
 0106 4427              clr R20
 0108 0AC0              xjmp L35
 010A           L32:
 010A                   .dbline 199
 010A           ;       {   
 010A                   .dbline 200
 010A           ;       TxRxBuf[i]=SpiReadSpiWrite(0);    // 读取数据接收缓冲区数据       
 010A 0027              clr R16
 010C 92DF              xcall _SpiReadSpiWrite
 010E 80E0              ldi R24,<_TxRxBuf
 0110 90E0              ldi R25,>_TxRxBuf
 0112 E42F              mov R30,R20
 0114 FF27              clr R31
 0116 E80F              add R30,R24
 0118 F91F              adc R31,R25
 011A 0083              std z+0,R16
 011C                   .dbline 201
 011C           ;       }
 011C           L33:
 011C                   .dbline 198
 011C 4395              inc R20
 011E           L35:
 011E                   .dbline 198
 011E 4430              cpi R20,4
 0120 A0F3              brlo L32
 0122           X6:
 0122                   .dbline 202
 0122           ;       Hign_nrf905_CSN;
 0122 C49A              sbi 0x18,4
 0124                   .dbline 203
 0124           ;     Delay(2);                            //
 0124 02E0              ldi R16,2
 0126 10E0              ldi R17,0
 0128 6BDF              xcall _Delay
 012A                   .dbline 204
 012A           ;       Hign_nrf905_TRX_CE;                                                     
 012A 949A              sbi 0x12,4
 012C                   .dbline -2
 012C           L31:
 012C                   .dbline 0 ; func end
 012C 5991              ld R21,y+
 012E 4991              ld R20,y+
 0130 0895              ret
 0132                   .dbsym r i 20 c
 0132                   .dbend
 0132                   .dbfunc e RX _RX fV
                        .even
 0132           _RX::
 0132                   .dbline -1
 0132                   .dbline 208
 0132           ; }
 0132           ; //--------------------------------设置接收模式----------------------------------
 0132           ; void  RX(void)
 0132           ; {
 0132                   .dbline 209
 0132           ;     SetRxMode();                                //设置NRF905接收模式
 0132 DADF              xcall _SetRxMode
 0134                   .dbline 210
 0134           ;       RxPacket();                     //读取接收数据缓冲区
 0134 DFDF              xcall _RxPacket
 0136                   .dbline 211
 0136           ;       Delay(10);
 0136 0AE0              ldi R16,10
 0138 10E0              ldi R17,0
 013A 62DF              xcall _Delay
 013C                   .dbline 212
 013C           ;       if(TxRxBuf[0]==0x29)
 013C 80910100          lds R24,_TxRxBuf
 0140 8932              cpi R24,41
 0142 39F4              brne L37
 0144           X7:
 0144                   .dbline 213
 0144           ;       {
 0144                   .dbline 214
 0144           ;        PORTC=seg[1];
 0144 20900500          lds R2,_seg+1
 0148 25BA              out 0x15,R2
 014A                   .dbline 215
 014A           ;        Low_Display4;
 014A DC98              cbi 0x1b,4
 014C                   .dbline 215
 014C                   .dbline 216
 014C           ;        Hign_Display3;
 014C DB9A              sbi 0x1b,3
 014E                   .dbline 216
 014E                   .dbline 217
 014E           ;        Hign_Display2;
 014E DA9A              sbi 0x1b,2
 0150                   .dbline 217
 0150                   .dbline 218
 0150           ;        Hign_Display1;
 0150 D99A              sbi 0x1b,1
 0152                   .dbline 218
 0152                   .dbline 219
 0152           ;       }
 0152           L37:
 0152                   .dbline 220
 0152           ;       if(TxRxBuf[0]==0x30)
 0152 80910100          lds R24,_TxRxBuf
 0156 8033              cpi R24,48
 0158 39F4              brne L40
 015A           X8:
 015A                   .dbline 221
 015A           ;       {
 015A                   .dbline 222
 015A           ;        PORTC=seg[2];
 015A 20900600          lds R2,_seg+2
 015E 25BA              out 0x15,R2
 0160                   .dbline 223
 0160           ;        Hign_Display4;
 0160 DC9A              sbi 0x1b,4
 0162                   .dbline 223
 0162                   .dbline 224
 0162           ;        Low_Display3;
 0162 DB98              cbi 0x1b,3
 0164                   .dbline 224
 0164                   .dbline 225
 0164           ;        Hign_Display2;
 0164 DA9A              sbi 0x1b,2
 0166                   .dbline 225
 0166                   .dbline 226
 0166           ;        Hign_Display1;
 0166 D99A              sbi 0x1b,1
 0168                   .dbline 226
 0168                   .dbline 227
 0168           ;       }
 0168           L40:
 0168                   .dbline 228
 0168           ;       if(TxRxBuf[0]==0x31)
 0168 80910100          lds R24,_TxRxBuf
 016C 8133              cpi R24,49
 016E 39F4              brne L43
 0170           X9:
 0170                   .dbline 229
 0170           ;       {
 0170                   .dbline 230
 0170           ;        PORTC=seg[3];
 0170 20900700          lds R2,_seg+3
 0174 25BA              out 0x15,R2
 0176                   .dbline 231
 0176           ;        Hign_Display4;
 0176 DC9A              sbi 0x1b,4
 0178                   .dbline 231
 0178                   .dbline 232
 0178           ;        Hign_Display3;
 0178 DB9A              sbi 0x1b,3
 017A                   .dbline 232
 017A                   .dbline 233
 017A           ;        Low_Display2;
 017A DA98              cbi 0x1b,2
 017C                   .dbline 233
 017C                   .dbline 234
 017C           ;        Hign_Display1;
 017C D99A              sbi 0x1b,1
 017E                   .dbline 234
 017E                   .dbline 236
 017E           ; 
 017E           ;       }
 017E           L43:
 017E                   .dbline -2
 017E           L36:
 017E                   .dbline 0 ; func end
 017E 0895              ret
 0180                   .dbend
 0180                   .dbfunc e main _main fV
 0180           ;           temp -> y+0
 0180           ;              j -> <dead>
 0180           ;              i -> <dead>
                        .even
 0180           _main::
 0180 EF97              sbiw R28,63
 0182 2197              sbiw R28,1  ; offset = 64
 0184                   .dbline -1
 0184                   .dbline 240
 0184           ; }
 0184           ; //------------------------------主函数------------------------------------------
 0184           ; void main(void)
 0184           ; {  
 0184                   .dbline 242
 0184           ;       uint i,j,temp[32];
 0184           ;       DDRD=0xf2;                //
 0184 82EF              ldi R24,242
 0186 81BB              out 0x11,R24
 0188                   .dbline 243
 0188           ;       DDRB=0xB3;                //
 0188 83EB              ldi R24,179
 018A 87BB              out 0x17,R24
 018C                   .dbline 244
 018C           ;       DDRA=0x1e;       //
 018C 8EE1              ldi R24,30
 018E 8ABB              out 0x1a,R24
 0190                   .dbline 245
 0190           ;       DDRC=0xff;              //LED端口设置
 0190 8FEF              ldi R24,255
 0192 84BB              out 0x14,R24
 0194                   .dbline 246
 0194           ;       PORTA=0x00;
 0194 2224              clr R2
 0196 2BBA              out 0x1b,R2
 0198                   .dbline 247
 0198           ;       PORTC=0xbf;
 0198 8FEB              ldi R24,191
 019A 85BB              out 0x15,R24
 019C                   .dbline 248
 019C           ;       Hign_BELL;
 019C 959A              sbi 0x12,5
 019E                   .dbline 248
 019E                   .dbline 249
 019E           ;       Hign_JDQ ;
 019E 979A              sbi 0x12,7
 01A0                   .dbline 250
 01A0           ;       Spi_initial();
 01A0 45DF              xcall _Spi_initial
 01A2                   .dbline 251
 01A2           ;       system_Init();
 01A2 4CDF              xcall _system_Init
 01A4                   .dbline 252
 01A4           ;       Config905();
 01A4 54DF              xcall _Config905
 01A6 48C0              xjmp L48
 01A8           L47:
 01A8                   .dbline 254
 01A8           ;       while(1)
 01A8           ;  {
 01A8                   .dbline 255
 01A8           ;      RX();
 01A8 C4DF              xcall _RX
 01AA                   .dbline 257
 01AA           ; //------------------------------------------------------------------------------
 01AA           ;       if((PINA & 0x20) == 0)            //有键按下KEY1
 01AA CD99              sbic 0x19,5
 01AC 0FC0              rjmp L50
 01AE           X10:
 01AE                   .dbline 258
 01AE           ;       {
 01AE           L52:
 01AE                   .dbline 259
 01AE           ;       while(!(PINA & 0x20));                          //等待按键松开GREEN
 01AE           L53:
 01AE                   .dbline 259
 01AE CD9B              sbis 0x19,5
 01B0 FECF              rjmp L52
 01B2           X11:
 01B2                   .dbline 260
 01B2           ;        TxRxBuf[0]=0x29;
 01B2 89E2              ldi R24,41
 01B4 80930100          sts _TxRxBuf,R24
 01B8                   .dbline 261
 01B8           ;        tf=1;   
 01B8 81E0              ldi R24,1
 01BA 80930000          sts _tf,R24
 01BE                   .dbline 262
 01BE           ;        PORTC=seg[1];
 01BE 20900500          lds R2,_seg+1
 01C2 25BA              out 0x15,R2
 01C4                   .dbline 263
 01C4           ;        Low_Display4;
 01C4 DC98              cbi 0x1b,4
 01C6                   .dbline 263
 01C6                   .dbline 264
 01C6           ;        Hign_Display3;
 01C6 DB9A              sbi 0x1b,3
 01C8                   .dbline 264
 01C8                   .dbline 265
 01C8           ;        Hign_Display2;
 01C8 DA9A              sbi 0x1b,2
 01CA                   .dbline 265
 01CA                   .dbline 266
 01CA           ;        Hign_Display1;
 01CA D99A              sbi 0x1b,1
 01CC                   .dbline 266
 01CC                   .dbline 267
 01CC           ;        }
 01CC           L50:
 01CC                   .dbline 269
 01CC           ; //------------------------------------------------------------------------------
 01CC           ;       if((PINA & 0x40) == 0)                  //有键按下KEY2
 01CC CE99              sbic 0x19,6
 01CE 0FC0              rjmp L56
 01D0           X12:
 01D0                   .dbline 270
 01D0           ;       {
 01D0           L58:
 01D0                   .dbline 271
 01D0           ;       while(!(PINA & 0x40));                          //等待按键松开GREEN
 01D0           L59:
 01D0                   .dbline 271
 01D0 CE9B              sbis 0x19,6
 01D2 FECF              rjmp L58
 01D4           X13:
 01D4                   .dbline 272
 01D4           ;        TxRxBuf[0]=0x30; 
 01D4 80E3              ldi R24,48
 01D6 80930100          sts _TxRxBuf,R24
 01DA                   .dbline 273
 01DA           ;        tf=1;    
 01DA 81E0              ldi R24,1
 01DC 80930000          sts _tf,R24
 01E0                   .dbline 274
 01E0           ;        PORTC=seg[2];
 01E0 20900600          lds R2,_seg+2
 01E4 25BA              out 0x15,R2
 01E6                   .dbline 275
 01E6           ;        Hign_Display4;
 01E6 DC9A              sbi 0x1b,4
 01E8                   .dbline 275
 01E8                   .dbline 276
 01E8           ;        Low_Display3;
 01E8 DB98              cbi 0x1b,3
 01EA                   .dbline 276
 01EA                   .dbline 277
 01EA           ;        Hign_Display2;
 01EA DA9A              sbi 0x1b,2
 01EC                   .dbline 277
 01EC                   .dbline 278
 01EC           ;        Hign_Display1;
 01EC D99A              sbi 0x1b,1
 01EE                   .dbline 278
 01EE                   .dbline 279
 01EE           ;        }
 01EE           L56:
 01EE                   .dbline 281
 01EE           ; //------------------------------------------------------------------------------
 01EE           ;       if((PINA & 0x80) == 0)                  //有键按下KEY3
 01EE CF99              sbic 0x19,7
 01F0 0FC0              rjmp L62
 01F2           X14:
 01F2                   .dbline 282
 01F2           ;       {
 01F2           L64:
 01F2                   .dbline 283
 01F2           ;       while(!(PINA & 0x80));                          //等待按键松开GREEN
 01F2           L65:
 01F2                   .dbline 283
 01F2 CF9B              sbis 0x19,7
 01F4 FECF              rjmp L64
 01F6           X15:
 01F6                   .dbline 284
 01F6           ;        TxRxBuf[0]=0x31;
 01F6 81E3              ldi R24,49
 01F8 80930100          sts _TxRxBuf,R24
 01FC                   .dbline 285
 01FC           ;        tf=3;
 01FC 83E0              ldi R24,3
 01FE 80930000          sts _tf,R24
 0202                   .dbline 286
 0202           ;        PORTC=seg[3];
 0202 20900700          lds R2,_seg+3
 0206 25BA              out 0x15,R2
 0208                   .dbline 287
 0208           ;        Hign_Display4;
 0208 DC9A              sbi 0x1b,4
 020A                   .dbline 287
 020A                   .dbline 288
 020A           ;        Hign_Display3;
 020A DB9A              sbi 0x1b,3
 020C                   .dbline 288
 020C                   .dbline 289
 020C           ;        Low_Display2;
 020C DA98              cbi 0x1b,2
 020E                   .dbline 289
 020E                   .dbline 290
 020E           ;        Hign_Display1;
 020E D99A              sbi 0x1b,1
 0210                   .dbline 290
 0210                   .dbline 291
 0210           ;       }
 0210           L62:
 0210                   .dbline 293
 0210           ; //------------------------------------------------------------------------------
 0210           ;       if(tf)
 0210 20900000          lds R2,_tf
 0214 2220              tst R2
 0216 71F0              breq L68
 0218           X16:
 0218                   .dbline 294
 0218           ;       {
 0218                   .dbline 295
 0218           ;       tf=0;
 0218 2224              clr R2
 021A 20920000          sts _tf,R2
 021E                   .dbline 296
 021E           ;       Low_JDQ ;
 021E 9798              cbi 0x12,7
 0220                   .dbline 298
 0220           ;       //--------------------------------------------------------
 0220           ;       SetTxMode();                            // 激发数据发s送
 0220 5DDF              xcall _SetTxMode
 0222                   .dbline 299
 0222           ;       TxPacket(TxRxBuf);                      // 装载待发送数据       
 0222 00E0              ldi R16,<_TxRxBuf
 0224 10E0              ldi R17,>_TxRxBuf
 0226 2ADF              xcall _TxPacket
 0228                   .dbline 300
 0228           ;       Delay(200);     
 0228 08EC              ldi R16,200
 022A 10E0              ldi R17,0
 022C E9DE              xcall _Delay
 022E                   .dbline 302
 022E           ;       //-------------------------------------------------
 022E           ;       TxRxBuf[0]=0;
 022E 2224              clr R2
 0230 20920100          sts _TxRxBuf,R2
 0234                   .dbline 303
 0234           ;        }
 0234           L68:
 0234                   .dbline 306
 0234           ;        //****************************************************************
 0234           ; 
 0234           ;       Hign_BELL;
 0234 959A              sbi 0x12,5
 0236                   .dbline 306
 0236                   .dbline 307
 0236           ;       Hign_JDQ ;                                                                                                                      
 0236 979A              sbi 0x12,7
 0238                   .dbline 308
 0238           ; }
 0238           L48:
 0238                   .dbline 253
 0238 B7CF              xjmp L47
 023A           X17:
 023A                   .dbline -2
 023A           L46:
 023A                   .dbline 0 ; func end
 023A EF96              adiw R28,63
 023C 2196              adiw R28,1  ; offset = 64
 023E 0895              ret
 0240                   .dbsym l temp 0 A[64:32]i
 0240                   .dbsym l j 1 i
 0240                   .dbsym l i 1 i
 0240                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile F:\JASK\无线资料集锦\开发备份\JASK2001开发包0905\M16-NRF905开发包\双向无线开关控制\NRF905_接收_发送\jifeng_jieshou.c
 0000           _tf::
 0000                   .blkb 1
 0001                   .dbsym e tf _tf c
 0001           _TxRxBuf::
 0001                   .blkb 4
 0005                   .dbsym e TxRxBuf _TxRxBuf A[4:4]c
 0005           ; }
