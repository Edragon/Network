C51 COMPILER V9.01   UART                                                                  12/06/2012 10:29:32 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN UART.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE UART.C ROM(COMPACT) OPTIMIZE(6,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "typedef.h"
   2          #include "gpio.h"
   3          #include "uart.h"
   4          
   5          static bit bUartFlag;
   6          
   7          
   8          /******************************************************************************/
   9          // 函数名称：uartInit 
  10          // 输入参数：无 
  11          // 输出参数：无 
  12          // 函数功能：设置好定时器0的工作模式 
  13          /******************************************************************************/
  14          void uartInit(void)
  15          {
  16   1          /*
  17   1           * 设置定时器0为16位自动重载定时器
  18   1          */
  19   1          AUXR |= 0x80; //定时器0为1T模式
  20   1          TMOD &= 0xF0; //设置定时器为模式0(16位自动重装载)
  21   1              TL0 = (0xFFFF - MCU_FREQ / UART_BUAD) & 0xFF; //设置定时初值
  22   1              TH0 = ((0xFFFF - MCU_FREQ / UART_BUAD) >> 8) & 0xFF; //设置定时初值
  23   1          TR0 = 0; //定时器0开始计时
  24   1          ET0 = 0; //使能定时器0中断
  25   1          EA = 1;
  26   1      }
  27          
  28          /******************************************************************************/
  29          // 函数名称：uartSendData 
  30          // 输入参数：ucData: 发送字节 
  31          // 输出参数：无 
  32          // 函数功能：使用串口发送一个字节数据 
  33          /******************************************************************************/
  34          void uartSendData(u8 ucData)
  35          {
  36   1          u8 ucCnt;
  37   1          UART_TX_LOW(); //串口起始位开始
  38   1          TR0 = 1; //定时器0开始计时
  39   1          ET0 = 1; //使能定时器0中断
  40   1          bUartFlag = ON; 
  41   1          while(bUartFlag == ON);
  42   1              /*
  43   1               * 由低位开始，将数据通过串口输出
  44   1              */
  45   1          for (ucCnt = 0; ucCnt < 8; ucCnt++) {
  46   2              UART_TX_SET(ucData & 0x01);
  47   2              ucData >>= 1;
  48   2              bUartFlag = ON; 
  49   2              while(bUartFlag == ON);
  50   2          }
  51   1          UART_TX_HIGH(); // 发送串口停止位  
  52   1          bUartFlag = ON; 
  53   1          while(bUartFlag == ON);
  54   1          TR0 = 0; //定时器0结束计时
  55   1          ET0 = 0; //禁能定时器0中断    
C51 COMPILER V9.01   UART                                                                  12/06/2012 10:29:32 PAGE 2   

  56   1      }
  57          /******************************************************************************/
  58          // 函数名称：uartSendString 
  59          // 输入参数：pS: 字符串首地址 
  60          // 输出参数：无 
  61          // 函数功能：发送字符串通过串口输出 
  62          /******************************************************************************/
  63          void uartSendString(char *pS)
  64          {
  65   1          while (*pS)                      //检测字符串结束标志
  66   1          {
  67   2              uartSendData(*pS++);         //发送当前字符
  68   2          }
  69   1      }
  70          
  71          /******************************************************************************/
  72          // 函数名称：time0ISR 
  73          // 输入参数：无 
  74          // 输出参数：无 
  75          // 函数功能：串口0服务函数 
  76          /******************************************************************************/
  77          void time0ISR(void) interrupt 1 using 1
  78          {
  79   1          EA = 0;
  80   1          bUartFlag = OFF;
  81   1          EA = 1;
  82   1      }
  83          
  84          
  85          
  86          
  87          
  88          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    105    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
