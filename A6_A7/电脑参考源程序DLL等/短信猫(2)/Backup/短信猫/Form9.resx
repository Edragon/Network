<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEALS0AAAEAIAA0IQAAFgAAACgAAAAtAAAAWgAAAAEAIAAAAAAApB8AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANyIAAFc2AQBILQAACAUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABkYGAArKCkAKScnACknJwApJycAKScnACknJwAsKSkAFhUVAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgZQIAunYGALVzBgC3dAYAuXUFAEQqAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABwbGwAyLy8ALy0tAC8tLQAvLS0ALy0tAC8tLQAyLzAAGRcYAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIZUAQC1dAYAq24GAKttBgCrbQYArW8GAMB7BQAoGQAAAAAAAAAA
        AAAAAAAAAAAAAB8dHgA2MzMAMzAxADMwMQAzMDEAMzAxADMwMQA2MzQAGxoaAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGhAAALx4BACtbwQArG8EAKxvBACsbwQArG8EALJyAwCRXQQAAAAAAAAA
        AAAAAAAAAAAAACIgIQA7ODkAODU2ADg1NgA4NTYAODU2ADg1NgA7ODkAHhwcAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAeUwBALV1BQCtcAUArXAFAK1wBQCtcAUArW8EAK5vAQC7izoAAAAAAAAA
        AAAAAAAAAAAAACUkJABAPj4APTs7AD07OwA9OzsAPTs7AD07OwBAPj4AIB8fAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAEAgAAu3gDALBzBQCvcgUAr3IFAK9yBQCvcgUArW8AAMaWPwCVYgsAAAAAAAAA
        AAAAAAAAAAAAACgmJwBEQkIAQT8/AEE/PwBBPz8AQT8/AEE/PwBFQkMAIyIiAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABSMwAAvHsFALBzBACwcwQAsHMEALBzBACwcwUArW4AANarXABVMgAAAAAAAAAA
        AAAAAAAAAAAAACkoKABBPj8APTs7AD07OwA9OzsAPTs7AD07OwBCPz8AJCMjAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACmawIAtXcDALF1AwCxdQMAsXUDALF1AwCxdAIAsXUCANqrVQAQBwAAAAAAAAAA
        AAAAAAAAAAAAADg3NwDFxMQAt7a2ALa2tQC1tLQAtbS0ALW0tADBwMAALCsqAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB8SAADCgAQAs3cEALN3BACzdwQAs3cEALN3BACxcwAAzJ5GAKBuFgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAQEBAAAAAAAAAAAAAQDAwARDw8ADw0OAA8NDgAQDg8AFBMTAA8ODgARDxAADAsLAA4N
        DQAQDxAAEA8PABAPDwAQDw8AEA8PABAPDwASEREAAwIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHJJAQC9fwQAtHgEALR4BAC0eAQAtHgEALR4BACwcQAA4bptADgfAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0MDQAxLi8ALSorAC0qKwAtKisALissAC8sLQAwLS4AIyEhACon
        KAAwLS4ALywtAC8sLQAvLC0ALywtAC8sLQAzMDEAAwQJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALl6AQC4fAMAtnoDALZ6AwC2egMAtnoDALV5AAC+hhcAzaBPAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8PDwA1MjMAMS4vADEuLwAxLi8AMS4vADEuLwAzLzEAJSIjACsp
        KQAyLzAAMS4vADEuLwAxLi8AMS4vADEuLwAuLTQATzYKAMF/AAC2eAEAtngBALZ4AQC2eAEAtngBALZ4
        AQC2eAEAtHcBALl+AwC3fAIAt3wCALd8AgC3fAIAt3wCALR3AADet2cAZ0EAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABEQEQA6NzcANTMzADUzMwA1MzMANTMzADUzMwA3NDUAKCYnAC8t
        LQA2NDQANTMzADUzMwA1MzMANTMzADUzMwAxMTgAUToLAMeHAQC7fwMAu38DALt/AwC7fwMAu38DALt/
        AwC7fwMAu38DALl+AwC4fQMAuH0DALh9AwC4fQMAuH0CALd5AADjvG4ADgQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMSEgA/PT0AOzg5ADs4OQA7ODkAOzg5ADs4OQA8OjoALCoqADQx
        MgA8OToAOzg5ADs4OQA7ODkAOzg5ADs4OQA3Nz4AUTsLAMaHAAC6fwEAun8BALp/AQC6fwEAun8BALp/
        AQC6fwEAun8BALp/AQC6fwEAun8BALp/AQC6fwEAuHwAANOnRwCecB0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABQTFABEQkIAPz09AD89PQA/PT0APz09AD89PQBBPj4ALy0uADc2
        NgBAPj4APz09AD89PQA/PT0APz09AD89PQA7PEIAUzwMAMaGAAC6fgAAun4AALp+AAC6fgAAun4AALt/
        AAC8ggEAvIIBALyCAQC8ggEAvIIBALyCAQC8ggEAuHwAAOrFcwAyGgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABYVFQBCQD8APDo6ADw6OgA8OjoAPDo6ADw6OgA+PDwAMC8vADg3
        NwA9OzsAPDo6ADw6OgA8OjoAPDo6ADw6OgA6O0EAUzwHANyuSQDPpUcAz6VHAM+lRwDPpUcA0KZLAMiY
        LQC8gQAAvYMCAL2DAgC9gwIAvYMCAL2DAgC8gQAAxpIbAM6hSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABIREQCcm5sAkpCQAJKQkACSkJAAkpCQAJKQkACZl5cARUNDAF5c
        XACXlZUAkpCQAJKQkACSkJAAkpCQAJORkQCIiI8AUjkAAP/mpgDz26IA89uiAPPbogDz26EA9uCuAM6e
        KgC+gwAAv4UAAL+FAAC/hQAAv4UAAL+FAAC8gAAA5b9nAGI9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8PDwBTUVEATUtMAExLSgBJSEcASUhHAElIRwBMS0sAKSgoADU0
        NABLSkoASUhIAE1LSwBNS0wATUtMAE1MTABKS04AMSIIAGxBAABmPQAAZj0AAGY9AABmPQAAXzkAAJFe
        AADGjAEAwIcAAMCHAADAhwAAwIcAAMCHAADAhgAA5b1nAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlIiMAIh8gACIfIAAiHyAAJSIjACQh
        IgAiHyAAIB0eAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKx0
        AQDGjQEAwokBAMKJAQDCiQEAwokBAMCGAADbsUkAmG0aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBwA0MTIALy0tAC8tLQAvLS0ALy0tAC8t
        LQAwLS4ALissAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBIBANOV
        AADFjAAAxIwAAMSMAADEjAAAxIwAAMGFAADvy3UALRYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAA4NTYAMzAxADMwMQAzMDEAMzAxADMw
        MQA0MTIAMi8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeE4AANGW
        AADGjQAAxo0AAMaNAADGjQAAxYsAANCeHgDKnkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJCQA+OzsAODU2ADg1NgA4NTYAODU2ADg1
        NgA5NjcANjQ1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxooDAMqT
        BQDHkAQAx5AEAMeQBADHkAQAxIsAAO3LcABdOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCgBDQEEAPTs7AD07OwA9OzsAPTs7AD07
        OwA+PDwAPDk5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0HwAA2aAOAMmU
        DQDJlA0AyZQNAMmUDQDIlAwAypUNAOnCagACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsKCgBFQ0MAPz09AD89PQA/PT0APz09AD89
        PQBAPj4APzw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACSZAcA054YAMqX
        FgDKlxYAypcWAMqXFgDJlA8A475fAJRqGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJCQBeXFwAV1VVAFdVVQBXVVUAV1VVAFdV
        VQBZV1gASUdHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUmxkAzZ0fAMyb
        HgDMmx4AzJseAMybHgDKlhMA8tOEACgTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBwCnpqYAn56eAJ+dnQCcm5sAnJubAJyb
        mwCjoqIAZGJiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEsvAADdrCwAzZ4nAM2e
        JwDNnicAzZ4nAMycJADYsEcAx55MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAREBEADw4PAA8O
        DwAPDg8AFRQUABEQEQATERIAFBITAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKp6FgDVpzMAz6EwAM+h
        MADPoTAAz6EwAMydJgDz144AVzUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMDEALissAC4r
        LAAuKywALissAC8sLQAwLC0AMi8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAYAAN2rNQDRpjkA0KU4ANCl
        OADQpTgA0KQ3ANKnOQDpxn0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3NDUAMS4vADEu
        LwAxLi8AMS4vADEuLwAxLy8ANTEyAAAAAAAAAAAAAAAAAAAAAAAAAAAAZUMIAOC1SADSqEEA0qhBANKo
        QQDSqEEA0KU7AOvPhgCQaB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8OToANjM0ADYz
        NAA2MzQANjM0ADYzNAA2MzQAOjc3AAAAAAAAAAAAAAAAAAAAAAAAAAAAwZEtANewTQDTq0kA06tJANOr
        SQDSq0kA0ahBAPfdnQAhDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCPz8AOzg5ADs4
        OQA7ODkAOzg5ADs4OQA7OTkAPz09AAAAAAAAAAAAAAAAAAAAAAAiEQAA5btWANWwUwDVr1IA1a9SANWv
        UgDUrU8A4cJzAMafUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHRUUAPzw9AD88
        PQA/PD0APzw9AD88PQBAPT0AREFCAAAAAAAAAAAAAAAAAAAAAAB/WhcA4r5jANayWwDWslsA1rJbANay
        WwDUr1MA+OOrAFEzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGREQAOzk5ADs5
        OQA7OTkAOzk5ADs5OQA7OTkAREJCAAAAAAAAAAAAAAAAAAAAAADVp0gA27lnANe1YwDXtWMA17VjANe1
        YgDauWgA6MqLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTkZEApaSkAKKh
        oQCioaEAoqGhAKKhoQCnpaUAg4GBAAAAAAAAAAAAAAAAADohAADryncA2blsANm5bADZuWwA2blsANi3
        ZwDx3akAiWUkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+PDwAOTg4ADg3
        NwA0MzMANDMzADQzMwA0MzMANTQ0AAAAAAAAAAAAAAAAAIprLgDmyH0A2rx0ANq8dADavHQA2rx0ANm6
        bQD75rUAHQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAqJycAJiMkACYjJAAmIyQAJyQlAC0qKwAtKisAIyInAHdqRwDoyoQA3MB9ANzAfQDcwH0A2797AOjR
        mQDDn10AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA0MDEALy0tAC8sLQAvLC0ALywtAC8sLQAvLC0AJiQpAHlrSgDqzowA3cOFAN3DhQDdw4UA3MGAAP7v
        ywBPMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA4NjYAMzExADMxMQAzMTEAMzExADMxMQAzMTEAKiktAHptTgDr0ZUA38aOAN/GjgDexY0A4suVAPDV
        oQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA+OzwAOTY3ADk2NwA5NjcAOTY3ADk2NwA5NjcAMC4zAHtvUwDs1Z8A4MqXAODKlwDexpAA+/LYAJBt
        MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABDQEEAPTs7AD07OwA9OzsAPTs7AD07OwA9OzsANTM3AHxxWADu2KgA4c2eAODKmQDq27kA/u3JABgH
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABGQ0QAPjw8AD47PAA+OzwAPjs8AD47PAA+OzwANzY5AHxyWgDt2KoA49GpAO3jygD///sAjmkoAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABiYGAAaWdnAGdlZQBnZWUAZ2VlAGdlZQBpZmcAU1FTAIN/dwD//vMA+/fvAP//9ADIo2AAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB/fX0Aj42NAIyKigCMiooAjIqKAIyKigCPjY0AcG9wAIqEeAD//+gA89uvAJNvMAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEVAQAzHQAABQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADgP////PgAAMAf///wOAAAgA///+AYAACAD///wAgAAIAP///ACAAAgA///4AIAACAD///gAgAAIAP
        //8AGAAAgA///wAYAACAAAH/ABgAAIAAAP4AGAAAwAAAAAA4AADwAAAAADgAAPAAAAAAeAAA8AAAAAB4
        AADwAAAAAHgAAPAAAAAA+AAA8AAAAAD4AADwAAAAAfgAAPgAAfgB+AAA/gA/8AH4AAD+AD/wA/gAAP4A
        P+AD+AAA/gA/wAf4AAD+AD/AB/gAAP4AP8AH+AAA/gAHgA/4AAD+gAOAD/gAAP8AAwAf+AAA/8ADAB/4
        AAD/wAMAH/gAAP/AAgA/+AAA/8ACAD/4AAD/0AIAP/gAAP/AAAB/+AAA/8AAAH/4AAD/4AAA//gAAP/4
        AAD/+AAA//gAAP/4AAD/+AAB//gAAP/4AAH/+AAA//gAA//4AAD/+AAD//gAAP/4AAf/+AAA//gAD//4
        AAA=
</value>
  </data>
</root>